{"version":3,"sources":["logo.svg","component/Third.js","App.js","reportWebVitals.js","index.js"],"names":["Third","arr","useState","active","setactive","point","setpoint","keyval","setkeyval","random","setrandom","inc","setinc","change","newp","end","setend","init","setinit","useEffect","setTimeout","shift","push","length","alert","ran","Math","floor","document","addEventListener","ev","console","log","keyCode","style","height","width","border","display","map","el","background","indexOf","borderRadius","margin","fontSize","onClick","className","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54a1620d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable no-else-return */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react/self-closing-comp */\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Third = () => {\r\n  const arr = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n  ];\r\n  const [active, setactive] = useState([370, 350, 330]);\r\n  let [point, setpoint] = useState(0);\r\n  const [keyval, setkeyval] = useState(-20);\r\n  const [random, setrandom] = useState(null);\r\n  const [inc, setinc] = useState(false);\r\n  const change = 20;\r\n  const newp = [...active];\r\n  const [end, setend] = useState(false);\r\n  const [init, setinit] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (end === false) {\r\n      setTimeout(() => {\r\n        if (inc === false) {\r\n          newp.shift();\r\n        } else {\r\n          setinc(false);\r\n        }\r\n        newp.push(newp[newp.length - 1] + keyval);\r\n        setactive(newp);\r\n      }, 100);\r\n      if (active[active.length - 1] === random) {\r\n        setpoint(point + 1);\r\n      }\r\n      if (active[active.length - 1] > 380 || active[active.length - 1] < 1) {\r\n        setend(true);\r\n        alert(\"You are Out \");\r\n      }\r\n    }\r\n  }, [active]);\r\n  useEffect(() => {\r\n    const ran = Math.floor(Math.random() * 380) + 1;\r\n    setrandom(ran);\r\n    if (init === false) {\r\n      setinc(true);\r\n    } else {\r\n      setinit(false);\r\n    }\r\n  }, [point]);\r\n  document.addEventListener(\"keydown\", (ev) => {\r\n    console.log(ev.keyCode);\r\n    if (ev.keyCode === 37) {\r\n      setkeyval(-1);\r\n    } else if (ev.keyCode === 39) {\r\n      setkeyval(+1);\r\n    } else if (ev.keyCode === 38) {\r\n      setkeyval(-20);\r\n    } else if (ev.keyCode === 40) {\r\n      setkeyval(+20);\r\n    }\r\n  });\r\n  const calcc = (val) => {\r\n    if (active.indexOf(val) === active.length - 1 && keyval === -20) {\r\n      return 1;\r\n    } else if (active.indexOf(val) === active.length - 1 && keyval === +20) {\r\n      return 4;\r\n    } else if (active.indexOf(val) === active.length - 1 && keyval === +1) {\r\n      return 3;\r\n    }\r\n    return 0;\r\n  };\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h3>Point:{point}</h3>\r\n        <div\r\n          style={{\r\n            height: \"500px\",\r\n            width: \"500px\",\r\n            border: \"1px solid black\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background: active.indexOf(el) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background: active.indexOf(el + change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 2 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 2 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 3 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 3 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 4 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 4 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 5 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 5 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 6 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 6 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 7 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 7 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 8 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 8 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>{\" \"}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 9 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 9 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 10 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 10 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 11 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 11 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 12 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 12 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 13 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 13 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>{\" \"}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 14 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 14 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 15 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 15 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 16 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 16 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 17 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 17 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            {arr.map((el) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"25px\",\r\n                    height: \"25px\",\r\n                    background:\r\n                      active.indexOf(el + 18 * change) !== -1 ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  {random === el + 18 * change ? (\r\n                    <div\r\n                      style={{\r\n                        width: \"  20px\",\r\n                        height: \"  20px\",\r\n                        borderRadius: \"50%\",\r\n                        background: \"black\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    ></div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div>For Android users button are below</div>\r\n        <div style={{ width: \"300px\", height: \"150px\" }}>\r\n          <div style={{ width: \"100%\", height: \"50%\" }}>\r\n            <button\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"100%\",\r\n                border: \"1px solid black\",\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n              onClick={() => {\r\n                setkeyval(-20);\r\n              }}\r\n            >\r\n              <span className=\"fa fa-arrow-up\"></span>\r\n            </button>\r\n          </div>\r\n          <div style={{ width: \"100%\", height: \"50%\", display: \"flex\" }}>\r\n            <button\r\n              style={{ width: \"100px\", height: \"100%\", fontSize: \"1.5rem\" }}\r\n              onClick={() => {\r\n                setkeyval(-1);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <span className=\"fa fa-arrow-left\"></span>\r\n            </button>\r\n            <button\r\n              style={{ width: \"100px\", height: \"100%\", fontSize: \"1.5rem\" }}\r\n              onClick={() => {\r\n                setkeyval(+20);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <span className=\"fa fa-arrow-down\"></span>\r\n            </button>\r\n            <button\r\n              style={{ width: \"100px\", height: \"100%\", fontSize: \"1.5rem\" }}\r\n              onClick={() => {\r\n                setkeyval(+1);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <span className=\"fa fa-arrow-right\"></span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          style={{ width: \"70%\", height: \"30px\", fontSize: \"1rem\" }}\r\n          onClick={() => {\r\n            if (end === true) {\r\n              setactive([370, 350, 330]);\r\n              setpoint(0);\r\n              setkeyval(-20);\r\n              setrandom(null);\r\n              setinc(false);\r\n              setend(false);\r\n              setinit(true);\r\n            }\r\n          }}\r\n        >\r\n          Restart\r\n        </button>\r\n      </center>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Third;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Third from \"./component/Third.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100vh\" }}>\n      <Third />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}